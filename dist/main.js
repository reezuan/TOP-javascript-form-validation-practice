(()=>{"use strict";var n={208:(n,e,a)=>{a.d(e,{A:()=>s});var t=a(354),i=a.n(t),o=a(314),r=a.n(o)()(i());r.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Bevan:ital@0;1&family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]),r.push([n.id,'html,\nbody {\n    width: 100%;\n    height: 100%;\n    background-color: #333;\n    font-family: Roboto, Helvetica, Arial, sans-serif;\n    font-size: 16px;\n}\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nform {\n    border: 2px solid whitesmoke;\n    border-radius: 10px;\n    padding: 15px;\n    width: 300px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\nform > div {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\nlabel {\n    color: whitesmoke;\n    font-size: 0.95rem;\n}\n\ninput {\n    padding: 5px 6px;\n}\n\ninput:invalid {\n    background-color: coral;\n}\n\nbutton[type="submit"] {\n    font-family: Roboto, Helvetica, Arial, sans-serif;\n    font-size: 1.05rem;\n    padding: 8px 10px;\n    background-color: whitesmoke;\n    border: none;\n    border-radius: 7px;\n    margin-top: 10px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;;IAEI,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,iDAAiD;IACjD,eAAe;AACnB;;AAEA;;;IAGI,sBAAsB;IACtB,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,4BAA4B;IAC5B,mBAAmB;IACnB,aAAa;IACb,YAAY;;IAEZ,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,iDAAiD;IACjD,kBAAkB;IAClB,iBAAiB;IACjB,4BAA4B;IAC5B,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;AACpB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Bevan:ital@0;1&family=Inter:wght@100;200;300;400;500;600;700;800;900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n\nhtml,\nbody {\n    width: 100%;\n    height: 100%;\n    background-color: #333;\n    font-family: Roboto, Helvetica, Arial, sans-serif;\n    font-size: 16px;\n}\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nform {\n    border: 2px solid whitesmoke;\n    border-radius: 10px;\n    padding: 15px;\n    width: 300px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\nform > div {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\nlabel {\n    color: whitesmoke;\n    font-size: 0.95rem;\n}\n\ninput {\n    padding: 5px 6px;\n}\n\ninput:invalid {\n    background-color: coral;\n}\n\nbutton[type=\"submit\"] {\n    font-family: Roboto, Helvetica, Arial, sans-serif;\n    font-size: 1.05rem;\n    padding: 8px 10px;\n    background-color: whitesmoke;\n    border: none;\n    border-radius: 7px;\n    margin-top: 10px;\n}"],sourceRoot:""}]);const s=r},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var a="",t=void 0!==e[5];return e[4]&&(a+="@supports (".concat(e[4],") {")),e[2]&&(a+="@media ".concat(e[2]," {")),t&&(a+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),a+=n(e),t&&(a+="}"),e[2]&&(a+="}"),e[4]&&(a+="}"),a})).join("")},e.i=function(n,a,t,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(t)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(r[d]=!0)}for(var l=0;l<n.length;l++){var u=[].concat(n[l]);t&&r[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),a&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=a):u[2]=a),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),e.push(u))}},e}},354:n=>{n.exports=function(n){var e=n[1],a=n[3];if(!a)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function a(n){for(var a=-1,t=0;t<e.length;t++)if(e[t].identifier===n){a=t;break}return a}function t(n,t){for(var o={},r=[],s=0;s<n.length;s++){var d=n[s],l=t.base?d[0]+t.base:d[0],u=o[l]||0,c="".concat(l," ").concat(u);o[l]=u+1;var p=a(c),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(A);else{var m=i(A,t);t.byIndex=s,e.splice(s,0,{identifier:c,updater:m,references:1})}r.push(c)}return r}function i(n,e){var a=e.domAPI(e);return a.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;a.update(n=e)}else a.remove()}}n.exports=function(n,i){var o=t(n=n||[],i=i||{});return function(n){n=n||[];for(var r=0;r<o.length;r++){var s=a(o[r]);e[s].references--}for(var d=t(n,i),l=0;l<o.length;l++){var u=a(o[l]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}o=d}}},659:n=>{var e={};n.exports=function(n,a){var t=function(n){if(void 0===e[n]){var a=document.querySelector(n);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(n){a=null}e[n]=a}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(a)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,a)=>{n.exports=function(n){var e=a.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(a){!function(n,e,a){var t="";a.supports&&(t+="@supports (".concat(a.supports,") {")),a.media&&(t+="@media ".concat(a.media," {"));var i=void 0!==a.layer;i&&(t+="@layer".concat(a.layer.length>0?" ".concat(a.layer):""," {")),t+=a.css,i&&(t+="}"),a.media&&(t+="}"),a.supports&&(t+="}");var o=a.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,a)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function a(t){var i=e[t];if(void 0!==i)return i.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,a),o.exports}a.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return a.d(e,{a:e}),e},a.d=(n,e)=>{for(var t in e)a.o(e,t)&&!a.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},a.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),a.nc=void 0,(()=>{var n=a(72),e=a.n(n),t=a(825),i=a.n(t),o=a(659),r=a.n(o),s=a(56),d=a.n(s),l=a(540),u=a.n(l),c=a(113),p=a.n(c),A=a(208),m={};function f(n,e){const a=document.createElement("label");return a.setAttribute("for",n.getAttribute("id")),a.textContent=e,a}m.styleTagTransform=p(),m.setAttributes=d(),m.insert=r().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=u(),e()(A.A,m),A.A&&A.A.locals&&A.A.locals,document.querySelector("body").appendChild(function(){const n=document.createElement("form");n.noValidate=!0;const e=document.createElement("div"),a=function(){const n=document.createElement("input");return n.setAttribute("type","email"),n.setAttribute("id","email"),n.setAttribute("name","email"),n}();e.appendChild(f(a,"Email")),e.appendChild(a),n.appendChild(e);const t=document.createElement("div"),i=function(){const n=document.createElement("input");return n.setAttribute("list","countries"),n.setAttribute("id","country"),n.setAttribute("name","country"),n}(),o=function(){const n=document.createElement("datalist");return n.setAttribute("id","countries"),["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas (the)","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia (Plurinational State of)","Bonaire, Sint Eustatius and Saba","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory (the)","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cabo Verde","Cambodia","Cameroon","Canada","Cayman Islands (the)","Central African Republic (the)","Chad","Chile","China","Christmas Island","Cocos (Keeling) Islands (the)","Colombia","Comoros (the)","Congo (the Democratic Republic of the)","Congo (the)","Cook Islands (the)","Costa Rica","Croatia","Cuba","Curaçao","Cyprus","Czechia","Côte d'Ivoire","Denmark","Djibouti","Dominica","Dominican Republic (the)","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Falkland Islands (the) [Malvinas]","Faroe Islands (the)","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories (the)","Gabon","Gambia (the)","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Holy See (the)","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran (Islamic Republic of)","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Korea (the Democratic People's Republic of)","Korea (the Republic of)","Kuwait","Kyrgyzstan","Lao People's Democratic Republic (the)","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands (the)","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia (Federated States of)","Moldova (the Republic of)","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands (the)","New Caledonia","New Zealand","Nicaragua","Niger (the)","Nigeria","Niue","Norfolk Island","Northern Mariana Islands (the)","Norway","Oman","Pakistan","Palau","Palestine, State of","Panama","Papua New Guinea","Paraguay","Peru","Philippines (the)","Pitcairn","Poland","Portugal","Puerto Rico","Qatar","Republic of North Macedonia","Romania","Russian Federation (the)","Rwanda","Réunion","Saint Barthélemy","Saint Helena, Ascension and Tristan da Cunha","Saint Kitts and Nevis","Saint Lucia","Saint Martin (French part)","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Sint Maarten (Dutch part)","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Sudan","Spain","Sri Lanka","Sudan (the)","Suriname","Svalbard and Jan Mayen","Sweden","Switzerland","Syrian Arab Republic","Taiwan","Tajikistan","Tanzania, United Republic of","Thailand","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands (the)","Tuvalu","Uganda","Ukraine","United Arab Emirates (the)","United Kingdom of Great Britain and Northern Ireland (the)","United States Minor Outlying Islands (the)","United States of America (the)","Uruguay","Uzbekistan","Vanuatu","Venezuela (Bolivarian Republic of)","Viet Nam","Virgin Islands (British)","Virgin Islands (U.S.)","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe","Åland Islands"].forEach((e=>{const a=document.createElement("option");a.setAttribute("value",e),n.appendChild(a)})),n}();t.appendChild(f(i,"Country")),t.appendChild(i),t.appendChild(o),n.appendChild(t);const r=document.createElement("div"),s=function(){const n=document.createElement("input");return n.setAttribute("type","tel"),n.setAttribute("id","postal-code"),n.setAttribute("name","postal-code"),n}();r.appendChild(f(s,"Postal code")),r.appendChild(s),n.appendChild(r);const d=document.createElement("div"),l=function(){const n=document.createElement("input");return n.setAttribute("type","password"),n.setAttribute("id","password"),n.setAttribute("name","password"),n}();d.appendChild(f(l,"Password")),d.appendChild(l),n.appendChild(d);const u=document.createElement("div"),c=function(){const n=document.createElement("input");return n.setAttribute("type","password"),n.setAttribute("id","confirm-password"),n.setAttribute("name","confirm-password"),n}();u.appendChild(f(c,"Confirm password")),u.appendChild(c),n.appendChild(u);const p=function(n){const e=document.createElement("button");return e.setAttribute("type","submit"),e.textContent="Submit",e}();return n.appendChild(p),n}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,